//
//  ListScreenPresenter.swift
//  ListApp
//
//  Created by Nikita Omelchenko on 30.03.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

private typealias Module = ListScreenModule

extension Module {
    class Presenter: ListScreenPresentationLogic {
        weak var viewController: ListScreenDisplayLogic?

        var dataSource: [ListScreenModule.Models.ViewModel] = []
        var dataSourceCount: Int { dataSource.count }

        func presentSomething(response: [ResponseModels.CharacterModels.ResultModel]) {
            let newData: [ListScreenModule.Models.ViewModel] = response.map {
                .init(
                    id: $0.id,
                    name: $0.name,
                    image: $0.image,
                    status: $0.status
                )
            }
            let difference = newData.difference(from: self.dataSource, by: { $0.id == $1.id })

            self.dataSource = newData
            viewController?.displaySomething(with: difference)
        }

        func getDataSourceItemInfo(by index: Int) -> ListScreenModule.Models.ViewModel? {
            dataSource[safe: index]
        }
    }
}

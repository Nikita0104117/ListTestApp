//
//  ListScreenInteractor.swift
//  ListApp
//
//  Created by Nikita Omelchenko on 30.03.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

private typealias Module = ListScreenModule

extension Module {
    class Interactor: ListScreenBusinessLogic, ListScreenDataStoreLogic {
        var presenter: ListScreenPresentationLogic?
        var worker: ListScreenWorkerLogic?

        var dataSource: [ResponseModels.CharacterModels.ResultModel] = []
        var dataSourceCount: Int { dataSource.count }

        func fetchData(_ isRefresh: Bool) {
            Task { @MainActor [weak self, isRefresh] in
                guard let self, let worker, let presenter else { return }

                if isRefresh { self.dataSource.removeAll() }

                let newData = await worker.fetchData(isRefresh)
                self.dataSource.append(contentsOf: newData)
                presenter.presentSomething(response: self.dataSource)
            }
        }

        func getDataSourceItemInfo(for indexPath: IndexPath) -> ListScreenModule.Models.ViewModel? {
            presenter?.getDataSourceItemInfo(by: indexPath.row)
        }
    }
}
